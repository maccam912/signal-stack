name: Deploy to Itch.io

on:
  push:
    branches:
      - main  # Set this to your default branch

permissions:
  contents: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Install Godot
        run: |
          wget -q https://github.com/godotengine/godot/releases/download/4.2.1-stable/Godot_v4.2.1-stable_linux.x86_64.zip
          unzip Godot_v4.2.1-stable_linux.x86_64.zip
          mv Godot_v4.2.1-stable_linux.x86_64 godot

      - name: Install Export Templates
        run: |
          wget -q https://github.com/godotengine/godot/releases/download/4.2.1-stable/Godot_v4.2.1-stable_export_templates.tpz
          mkdir -p ~/.local/share/godot/export_templates/4.2.1.stable
          unzip Godot_v4.2.1-stable_export_templates.tpz
          mv templates/* ~/.local/share/godot/export_templates/4.2.1.stable/

      - name: Build
        run: |
          mkdir -p ./build/web
          ./godot --headless --export-release "Web" ./build/web/index.html
          # Ensure COOP and COEP headers are set in the exported HTML file
          sed -i 's/<head>/<head>\n    <meta http-equiv="Cross-Origin-Opener-Policy" content="same-origin">\n    <meta http-equiv="Cross-Origin-Embedder-Policy" content="require-corp">/' ./build/web/index.html

      - name: Download Butler
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          unzip butler.zip
          chmod +x butler
          ./butler -V

      - name: Deploy to itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          ./butler push ./build/web maccam912/signal-stack:web
          ./butler status maccam912/signal-stack:web
